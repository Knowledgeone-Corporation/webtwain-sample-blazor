@using SampleWebsiteBlazorWasm.Shared.Models
@inject IJSRuntime jsRuntime

<div id="k1interface-visible" class="@(IsDisplayUI ? "show" : "hide")">
    <div><label class="scanning-label mt-3">Initialize Scan Process:</label></div>
    <div class="input-group">
        <div class="input-group-btn">
            <button id="scanbtn" type="button" class="btn btn-primary" aria-label="Bold">
                <span>Initialize</span>
            </button>
        </div>
    </div>
</div>

@code { 
    private bool IsDisplayUI = false;

    [Parameter]
    public EventCallback<AcquireEventModel> CompleteAcquire {get; set;}

    protected override async Task OnInitializedAsync()
    {
        var twainOptions = await jsRuntime.InvokeAsync<TwainOptionsModel>("k1_Options");
        await jsRuntime.InvokeVoidAsync("k1_setConfig", twainOptions.ScannerInterface.Visible);
        await jsRuntime.InvokeVoidAsync("k1_renderVisible", DotNetObjectReference.Create(this));
        await jsRuntime.InvokeVoidAsync("k1_resetService");
        IsDisplayUI = true;
        await base.OnInitializedAsync();
    }

    [JSInvokable]
    public async Task AcquireDocument(string response, bool isUpload)
    {
        await CompleteAcquire.InvokeAsync(new AcquireEventModel
        {
            AcquireResponse = response,
            IsUpload = isUpload
        });
    }
}
